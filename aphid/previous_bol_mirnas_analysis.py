import matplotlib.pyplot as plt
import csv

prev_mirs = []
cur_mirs = {}

with open('previous_bol_mirnas.csv', 'r') as f:
    csvreader = csv.reader(f, delimiter = ',')
    for row in csvreader:
        name = row[0]
        seq = row[1]
        prev_mirs.append("{0}_{1}".format(name, seq))

#%%
        
with open('exact_mirs_precursor_info.csv', 'r') as f:
    csvreader = csv.reader(f, delimiter = ',')
#    header = next(csvreader)
    for row in csvreader:
        cluster = row[0]
        mature = row[3].replace('U', 'T')
        star = row[5].replace('U', 'T')
        cur_mirs[cluster] = {mature : [], star : []}
        for entry in prev_mirs:
            name = '_'.join(entry.split('_')[:-1])
            seq = entry.split('_')[-1]
            if seq == mature:
                cur_mirs[cluster][mature].append(name)
            elif seq == star:
                cur_mirs[cluster][star].append(name)
            else:
                pass

#%%


prev = 0
new = 0
for cluster in cur_mirs.keys():
    keys = list(cur_mirs[cluster].keys())
    if len(cur_mirs[cluster][keys[0]]) > 0 or len(cur_mirs[cluster][keys[1]]) > 0:
        prev += 1
    else:
        new += 1
print("Previous: {0}\nNew: {1}".format(prev, new))

#%%

exact_mirs = {}
with open('exact_mirs.fa', 'r') as f:
    for line in f:
        name = line.lstrip('>').rstrip('\n')
        seq = next(f).replace('U', 'T').rstrip('\n')
        exact_mirs[seq] = [name]

with open('exact_mirs_precursor_info.csv', 'r') as f_read, \
     open('exact_mirs_precursor_info_w-prev.csv', 'w', newline = '') as f_write:
    csvreader = csv.reader(f_read, delimiter = ',')
#    header = next(csvreader)
#    newheader = [header[0]] + ['Mature/star previously identified in B. oleracea'] + header[1:]
    csvwriter = csv.writer(f_write, delimiter = ',')
#    csvwriter.writerow(newheader)
    for row in csvreader:
        cluster = row[0]
        endrow = row[1:]
        newrow = []
        newrow.append(cluster)
        
        mature = row[3].replace('U', 'T')
        star = row[5].replace('U', 'T')
        prevs = []
        prevs.extend(cur_mirs[cluster][mature])
        prevs.extend(cur_mirs[cluster][star])
        if len(prevs) > 0:
            lets = {}
            for entry in prevs:
                letters = entry.split('miR')[1].lstrip('0123456789')
                if len(letters) > 0:
                    num = entry.split('miR')[1][:-len(letters)]
                else:
                    num = entry.split('miR')[1]
                lets.setdefault(num, set()).add(letters)
            string = ''
            for key in lets.keys():
                string += 'miR{0}{1}; '.format(key, '/'.join(lets[key]))
            string = string.rstrip('; ')
            newrow.append(string)
            if mature in exact_mirs.keys():
                exact_mirs[mature].append(string)
            elif star in exact_mirs.keys():
                exact_mirs[star].append(string)
            else:
                pass
        else:
            newrow.append('')
        newrow.extend(endrow)
        csvwriter.writerow(newrow)

#%%

zhang_2018 = ["TTAGATGACCATCAACAAATA", "TGCCAAAGGAGATTTGCCCCG", "ATCAATGTTGGCTCAATTATG", "GCAAGTTGACTTTGGCTCTGT", "TTTGGTGGCAAAAAGACCTTG", "CGTATTGTTCAACAAGGCTCC", "AAAGACGGCTCTTATATCTCTTA", "TATTATAGAGGTGGATTTGCT", "AATCGGCAAATTAAATACTCAAGT", "TTTGGACTGAAGGGAGCTCC", "ATTGGAAGGTTCTTAAGACGAAGT", "TCCCAAATGTAGACAAAGCA", "CTTTCTGCCGGTAACTTGGAT", "TTATTAAACGCCGCGTCTAAC", "CTTCCGAAAGACTTACATTGAAGT", "TCGCTTGGTGCAGGTCGGGAC", "CTTTCTGCCGGTAACTTGGAG", "CGCTCACTGTTCCGAGAACTG", "TTGACAGAAGAAAGAGAGCAC", "TTCCACAGCTTTCTTGAACTG", "AAAACGACGTAGTATTGAAAAATG", "ATCTGCATCACTGAACTCCATGGA", "ATGGATGACATGGAAATATGAGGT", "ATCATGATTATTGGAGGGTTC", "TGTTCTGTGGGTTTTTACCGA", "CTACGAGACGTATCTTATATT", "TCCGCTGTAGCACAAAGGC", "CCTGCCTTCCATCAACTGAAT", "GGGTCGATATGAGAACACATG", "CTGAACCGTCGCATGATTTGT", "ACGTCTGCCTGGGTGTCACA", "TGCTCACGGCTCTTTCTGTCAGT", "TGACGGTATTTCTCCTACGTAG", "TTGTGGGCTTTTAAGAAGACG", "TTGTAGAATTTTGGGAAGGGC", "GCGTACAGAGTAGTCAAGCATG", "TTCATGGACGTTGAGG", "ATTGGACCATCACTTTT", "TTTTCTGCAGTTTTATTCTTT", "TGCCTGGCTCCCTGTATGCC", "TCAGAACCAAACCCAGAACAAG", "ATCATGCGATCTCATTGGATT", "AGAATAAAACTGCAGAAAAGT", "TTTTACCGGAATATAAGAATC", "AGATGAAGCCTCCGACTGAGA", "TTTTGTCGTTCACGAGTTTTCAAC", "TCAAAATACAAAGTCCAGCGA", "TTGCGGCTAAGAAACGAACACGGC", "TGGCATTGGTAGTAATGAGTGT", "ACAGTAACGAGACGGTATCACTCC", "TTTGTACCTTTAATAGATTGT", "AGAGATCGGGGTTAATCATGC", "TTGAGCCGTGCCAATATCACT", "TAATGGTGATTTTGAATCTAA", "GTTCTTGCCCTACATTTC", "TGACAGAAGAGAGTGAGCACA", "TTGACAGAAGATAGAGAGCAC", "TGACAGAAGAGAGTGAGCAC", "TTTGGATTGAAGGGAGCTCTA", "TCAATGCACTGAAAGTGACTA", "TGGAGAAGCAGGGCACGTGCA", "TGGAGAAGCAGGGCACGTGCG", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATCCCCC", "TGAAGCTGCCAGCATGATCTAA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCT", "TCGCTTGGTGCAGGTCGGGAA", "TCGCTTGGTGCAGGTCGAGAA", "CAGCCAAGGATGACTTGCCGA", "TAGCCAAGGATGACTTGCCTGC", "TGAGCCAAAGATGACTTGCCG", "CAGCCAAGGATGACTTGCCGG", "TTGAGCCGTGCCAATATCACG", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATCT", "GGAATCTTGATGATGCTGCAT", "AGAATCTTGATGATGCTGCAG", "GTCCTCGGGATGCGGATTACC", "ATCCTCGGGATACAGATTACC", "TAATCTGCATCCTGGGGTTTA", "AAGCTCAGGAGGGATAGCGCC", "TCCAAAGGGATCGCATTGATC", "TTGGCATTCTGTCCACCTCC", "CTGAAGTGTTTGGGGGAACTC", "CTGAAGTGTTTGGGGGGACTC", "TCATTGAGTGCAGCGTTGATGT", "TGCCAAAGGAGATTTGCCCGG", "TGCCAAAGGAGATTTGTCCGG", "TTAGATTCACGCACAAACTCG", "TCCACCCATACCATACAGACCC", "AAGAGGTTCGGAGCGGTTTGAAGC", "TCTGATGTATATAGCTTTGGG", "TGGAGTAGAAAATGCAGTCGT", "ATAGTACTAGTACTTGCATGATCA", "TCAATACATTGGACTACATAT", "TGTGTTCTCAGGTCACCCCTT", "GTTTCATCTTAGAGAATGTTGTC", "TTTTGTTCATGACTGCATTTTC", "TACTTAATTATAAGTCGTCTGG", "TACTGGACGACTTACACGGAAG", "GCTTACTCTCTCTCTGTCACC", "GCTCACTGCTCTATCTGTCAGA", "TGCTCACCTCTCTTTCTGTCAGT", "TGCTCACTGCTCTTTCTGTCAGA", "TTTCCAAATGTAGACAAAGCA", "GCGTATGAGGAGCCATGCATA", "GTCACTTTCAATGCGTTGATC", "TCGATAAACCTCTGCATCCAG", "CACGTGTTCTACTACTCCAAC", "CCCGCCTTGTATCAAGTGAAT", "CCCGCCTTGCATCAACTGAAT", "AGAATCTTGATGATGCTGCAT", "GCAGCACCATTAAGATTCACA", "GCAGCATCATTAAGATTCACA", "CATCAATGAAAGGTATGATTCC", "TACATCTTCTCCGCGGAAGCTC", "GACCTCAGGATGCGGATTACC", "ATCCTCGGGATACGGATTACC", "TTGGACTGAAGGGAGCTCCCT", "CGCTGTCCATCCTGAGTTTCA", "ACGGTATCTCTCCTACGTAGC", "GTTCCTCTGAGCACTTCATTG", "GCTCAAGAAAGCTGTGGGAAA", "TGTGTTCTCAGGTCACCCCTG", "GACTTATAATGATCTCATGAA", "TGTTTTGTGCGTGAATCTAATT", "GGGAGCCAGGGAAGAGGCAGT", "ATAAATCCCAAGCATCATCCA", "AATATTAATATAATTGGTGAG", "TTGTGATTTGGTTGGAATATC", "AAAAATGGAGTGAGAAATGGA", "ATGTAGTCCAATCTATTGAAG", "TTTCATCTTAGAGAATGTTGTT", "TTTCCCGTAAAGCTTAGAACC", "TTTTGCGTTTCAACTCGGTCC", "TTGCAAGCCAGACATTTCCTTT", "ACAATGAACGAAATCCAAATC", "ACAGGTGGTGGAACAAATATGAGT", "TCATATTAGTTCTACCTCCTGCTG", "TTATTCACAACTGCATAATTC", "TAAAAGTTAAGAGACAAGTTA", "AAGAACTCGTCTCTTAACTTTTAA", "ACAAAACGATTACACAGCTCGGTC", "TAATCTGCATCCTGAGGTTTA", "GGAGTGTCATGAGAACACGGA", "CTTTGTCTATCGTTTGGAAAAG", "TGCCTGGCTCCCTGTATGCCA", "GGAGGCAGCGGTTCATCGATC", "TCGCTTGGTGCAGGTCGGGAC", "TTCGCAGGAGAGATAGCGCCA", "GGGTCGACATGAGAACACATG", "TATGAGAGTATTATAAGTCAC", "TTCTAAGCTTTACGGGAAACC", "AGAGATGTCTGGCTTGCAACA", "TTTGGATTTTGGTCATTGTTG", "ACCCGTCTCTTAATTTTTAAC"]

wang_2012 = ["TTGTATTGCATTTATGTTTT", "TTGTATTGCATTTATGTTTT", "TTTTAGTTCATATTTATTTT", "TGGTAAATAATCTGAAAAATC", "TGGTTTTCATATTTTTCATG", "TGGATTTCAGATTATTCATG", "TTGAGAAAAATATAAAAAATC", "TTTGTTAAGTCTAAATTTTT", "AGATTAATTTTATTATTTTTAA", "TTTTGAAACGGAGAGAGTAAT", "TTTCGTGAACGGAGAGAGTATT", "TTTAGGAACGGATGGAGTATT", "ACCCTGGCTCTGATACCAAG", "TTATTTTTTAAAATAGATATT", "TTAATTTTAAAAATAGATATT", "TTAATTTTTAAAATATGAAATT", "TTTTTTTTTAAAAAAGACATT", "TTCTTTCTTTAAAATAGAGATT", "TTTATTTTTAGAAATAGATATT", "TTAATTTTTATAAATAGATATT", "TTATTTTTTAAAATAGATATT", "CAAAAGAGATTGTGAGCTTGTA", "TGTGTTGTTATGTGAATTTCA", "TTTATAACTTAAAATAAAAT", "TTTATTGCAAAACATGAAAT", "TTTATTTGATTAAAATAAAAT", "TTTATTATTTCAAAATGAAAT", "TTTTTTAGTTAAAATGAAAT", "TTTATTACTTAAAAATAAAAT", "TTTATTGCTAGAAATAAAAT", "TTTATTCGTTAAAATGTAAT", "ATATATTATATCAATATATTTGT", "TTATAATATAAATTAAAATAT", "TTTAAACATAAATTAAAAAAT", "TTATAATATAAATTAAAATAT", "TTTTCAAAGAAATTAAAATAT", "TTTTTACTTACATTAAAATAT", "TTTTCTACTTAAATTAAATTAT", "TTTTGATATAAATTAAATTAT", "GCTCACTCTCTCTATGTCATA", "GCTCACTCTCTATTCCTGTCACC", "GCTCATTCTCGTTCTGTCATA", "TGACAGAAGAGAGCGAGCAC", "TGAGAGAGAGAGAGAGAGCTC", "TGACAGATAGAGCAGTGAGCAC", "GCTCACTGCTCTATCTGTCAGA", "TGACATAGAGAGAGTGAGCAC", "GCTCACTCTCTCTATGTCATA", "TGACAGAAGAGAGCGAGCAC", "TGTGTCTATAATTTTGTAAA", "TGTGTCTATCAATTTTTGAAA", "TCCGAAGTGAAGACAAAGC", "TTTGTTTAAAATTTTAGAAA", "TCCGAAGTGTAGACAAAGC", "TCCGAAGTGAAGACAAAGC", "TCCCAAATGTAGACAAAGCA", "TTTGTCTATATTCTTGGAAA", "CTTTGTCTATATTCTTGGAAA", "TTTTTTTATAATTTTGGAAA", "TGCCTGGCTCCCTGTATGCCA", "TGCCTGGCTCCCTGTATGCCA", "GCATACAGGGAGCCAGGCATG", "GCGTACGAGGAGCCAAGCATG", "TCGATAAACCTCTGCATCCAG", "TCGATAAACCTCTGCATCCAG", "TCGATAAACCTCTGCATCCAG", "TGGAGAAGCAGGGCACGTGCG", "TGGAGAAGCAGAGCACGTGCA", "CACGTGCTCTGCTTCTCCAAC", "CACGTGCCCTGCTTCTCCAGC", "TGGAGAAGCAGGGCACGTGCG", "GGTATGTTGTCAGGATTGGAGA", "TTAAGCTGCCAGCATGATCTTG", "AGACTTGGTCCAGCTCGGTGAA", "GCTCCCGCCTTGCATCAATTGAAT", "TCGCTTGGTGCAGGTCGGGAA", "GGCAAGTCATCCTTGGCTACT", "TGAGCCAAAGATGACTTGTCG", "TGAGCCAAAGATGACTTGCCG", "TAGCCAAGGATGACTTGCCTG", "TGAGCCAAAGATGACGTGCCG", "GGCAAGTCATCCTTGGCTACC", "TAGCCAAGGATGACTTGCCTG", "GGCAAGTCATCCTTGGCTACC", "GGCAAGTCATCCTTGGCTGCA", "TAGCCGAAGGACAACTTGCCAG", "GCAGCCAAGGATGACTTGCCG", "GGCAAGTTGTCCTTCGGCTACA", "CAGCCAAGGATGACTTGCCGA", "TCTGGCAAGTTGTCCTTCGGCT", "TGAGCCGTGCCAATATCACTA", "TTGGGCCATGCCAATATCTC", "TGATTGAACCGCACCAATATCT", "TGATTGAACCGCACTAATATCT", "TTGAGCCGCGCCAATATCAC", "CAGCACCATTAAGATTCACA", "TGAATCTTAATGGTGCTGCAC", "CAGCACCATCAAGATTCACA", "GGAATCATTATGATGCTCCA", "CCTCGCCGGCGAGCGCGGCCA", "ACGAGGTTGGTTTATTTTGG", "CATCAATGAAAGGTATGATTCC", "TTAGTTAATATTTATGAAGAA", "CTTCCATATATGTTAATTAT", "ACATGTGTACAAGTTTACATGT", "TAATCCGCATCCTGAGGTCTA", "GACCTCAGGATGCGGATTACC", "TAATCTGTATCCCGAGGATTA", "ATCCTCGGGATACAGATTACC", "AACCTCAGGATGCAGATTACC", "GACCTCAGGATGCGGATTACC", "TTTCAGAAAATAAAATTTTGTTC", "TATATTTTCTTCTTTATTTGT", "AGATAGTAGACTGTTTTGTAT", "CTTCTTCCTCTTCCTCTTCCTC", "TTTTTTTGCATTTTATTAGGTA", "GGCTAGGGGACGGACTGGGA", "GGCCGGGGGACGGACTGGGA", "GGCCGGGGGACGGACTGGGA", "GGCCGGGGGACGGACTGGGA", "GGCCGGGGGACGGACTGGGA", "GGCCGGGGGACGGACTGGGA", "GGCTGGGGGACGGACTTGGA", "GGCCGGGGGACGGACTGGGA", "GGCCAGGGGACGGAGTGGGA", "AGATAAATATTTAAATAACAAA", "CTTTATTATAGATGTAAAAA", "AGAGCTTCCTTGAGTCCATTC", "TTGGACTGAAGGTAGCTCCC", "GAGCTACCTTCAGTCCAATC", "TGGATGGGTCAACGGAAGCTT", "TTTTAGTTTGTTTGTATATGAA", "TTTTAGTTTGTTTGTATATGAA", "ACGGTATCTCTCCTACGTAGC", "TTGGCATTCTGTCCACCTCC", "CTGAAGTGTTTGGGGGAACTC", "GTTCCCTTTAACGCTTCATTG", "CTGAAGTGTTTGGGGGCACTC", "CTGAAGTGTTTGGGGGAACTC", "TCATTGAGTGCAGCGTTGATGT", "TCATCGAGTGAAGAGTTGATG", "TCTCTCTCTCTCTCGAAAGC", "TGTGTTCTCATGTCGACCCTG", "TGCCAAAGGAGATTTGTCCGG", "TGCCAAAGGAGATCTTGCCCTG", "TGCCAAAGGAGATTTGCCCGG", "TGCCAAAGTTGAATTTCCC", "CACTAAAGGAGGAGTTGCCCTG", "TGCCAAAGGAGATTTGCCTAG", "TGCCAATAGAGATCTTGCCCTG", "TGCCAAAGGAGATTTGCCCGG", "GGGCAAGATCTCTATTGGCAGA", "TGCCAAAGGAGAGTTGCCCTT", "GATTTATATTAATATCATGAA", "TTAGATTCACGCACAAACTCG", "TTTAAACCATAAACTCTTTGGT", "TTTAAATCATATAATTTTAGT", "TCAATCTCATCATCATCATCC", "TCATCTTCATCTTCATCTTCA", "TCAATCTCATCATCATCATCC", "TGATGAATGTCGATCGATGTTG", "TAAATTAATTACGAAAATTAT", "CAACTTAAAACTAGTTGGCAGT", "ACAAAGTTTTATACTGATAAT", "ACGTTTTCTTTTTGGCAGATCA", "TTACCCCATATTGGAGTTGA", "TAGTAATTTTTCTTTTCTAAA", "TTATACGAATTTAATAGAAAA", "TGTAGAGAAAGAAAACCTCTT", "TAAGAAGAAGAAGAAGAAGA", "TAAGAAGAAGAAGAAGAATA", "TGTGAAGAATAACGAAGAAAA", "TAAGAAGAAGAAGAAGAGAA", "TGAAAAGGAGAAGAAGAAAA", "TAAGAAGAAGAAGCAGATAA", "TGAAAAGAAAAAGAAAAAAA", "TGAGAGGATGAAGAAGAAGA", "TGTGAAGAAGAATAAGAAGA", "TAAGAAGAAGAAGAAGAAGA", "TTAGAAAAAGAAGAAAAAAA", "TAAGAAGAAGAAGAAGAGAA", "CCTCTGTTCCTAATCATTGTTGT", "ATGTAACAAATGTTGTATTTCT", "TCTTGCTTAAATGAGTATTACA", "AGATGCTCATTTAAGCAAGCAA", "TTTGCTTCTTAGTCTTGCACA", "TTTTCTTCTTCTTCTTGCACA", "TTCTCTTCTTCTTCTTTAACA", "TCTTCTTCTTCTTCTTGTTCACA", "CCGCTCTGATACCAATTGTTG", "TCAATTAGTTTGGAATATATAT", "TTTTTCCTCCAATTTCCCCAA", "TATGAAGCAGACTGTTCA"]

lukasik_2013 = ["AACAGCCTAAACCAATCGGAG", "ACAGCCTAAACCAATCGGAGC", "TTTAGGAACGGATGGAGTATT", "TTTTGAAACGGAGAGAGTAAT", "TGACAGAAGAGAGCGAGCAC", "TGACAGAAGAGAGCGAGCAC", "TGACAGAAGAGAGTGAGCACA", "TGACAGAAGAGAGTGAGCACA", "TGACAGAAGAGAGTGAGCACA", "GCTCACTGCTCTTTCTGTCAGA", "GCTCATTCTCGTTCTGTCATA", "TGACAGAAGAGAGAGAGCACA", "TGACAGAAGAGAGAGAGCACA", "GCTCACTGCTCTATCTGTCAGA", "TGACAGAAGAGAGAGAGCACA", "TGACAGATAGAGCAGTGAGCAC", "TTGACAGAAGATAGAGAGCAC", "GCTCTCTAGCCTTCTGTCATCA", "TTGACAGAAGATAGAGAGCAT", "TTGACAGAAGATAGAGAGCAT", "TTGACAGAAGATAGAGAGCAT", "TTGACAGAAGAGAGAGAGCAC", "TTGACAGAAGAGAGAGAGCAC", "TTGACAGAAGAGAGAGAGCAC", "TCCCAAATGTAGACAAAGCA", "TCCCAAATGTAGACAAAGCA", "CTTTGTCTATATTCTTGGAAA", "TTTGGATTGAAGGGAGCTCTA", "TTTGGATTGAAGGGAGCTCTA", "TTTGGATTGAAGGGAGCTCTA", "TTTGGATTGAAGGGAGCTCTG", "TTTGGATTGAAGGGAGCTCTG", "TTTGGATTGAAGGGAGCTCTG", "TTTGGATTGAAGGGAGCTCTG", "CTTGGATTGAAGGGAGCTCTA", "GCGTACGAGGAGCCAAGCATG", "TGCCTGGCTCCCTGTATGCCA", "TGCCTGGCTCCCTGTATGCCA", "GCATACAGGGAGCCAGGCATG", "GCGTATGAGGAGCCATGCATA", "TGCCTGGCTCCCTGTATGCCT", "TGCCTGGCTCCCTGTATGCCT", "TGCCTGGCTCCCTGTATGCCT", "TGCCTGGCTCCCTGTATGCCG", "TGCCTGGCTCCCTGTATGCCG", "TCAATGCACTGAAAGTGACTA", "TCGATAAACCTCTGCATCCAG", "CACGTGCCCTGCTTCTCCAGC", "TCGATAAACCTCTGCATCCAG", "TCGATAAACCTCTGCATCCAG", "CACGTGCTCTGCTTCTCCAAC", "TGGAGGCAGCGGTTCATCGATC", "GGAGGCAGCGGTTCATCGATC", "TCGATAAACCTTTGCATCCAG", "TGGAGAAGCAGGGCACGTGCG", "TGGAGAAGCAGGGCACGTGCA", "TGGAGAAGCAGGGCACGTGCA", "TGGAGAAGCAGGGCACGTGCA", "TGGAGAAGCAGGGCACGTGCA", "TGGAGAAGCAGGGCACGTGCA", "TGGAGAAGCAGGGCACGTGCA", "TGGAGAAGCAGGGCACGTGCA", "TGGAGAAGCAGGGCACGTGCA", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCT", "TCGGACCAGGCTTCATTCCTC", "TCGGACCACGCTTCATTCCCC", "TGAAGCTGCCAGCATGATCTAA", "TGAAGCTGCCAGCATGATCTAA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTA", "TGAAGCTGCCAGCATGATCTT", "TGAAGCTGCCAGCATGATCTT", "TGAAGCTGCCAGCATGATCTG", "TGAAGCTGCCAGCATGATCTG", "TGAAGCTGCCAGCATGATCTG", "TGAAGCTGCCAGCATGATCTG", "TGAAGCTGCCAGCATGATCTG", "TGAAGCTGCCAGCATGATCTG", "TCGCTTGGTGCAGGTCGGGAA", "TCGCTTGGTGCAGGTCGGGAC", "TCGCTTGGTGCAGATCGGGAC", "TCGCTTGGTGCAGATCGGGAC", "TCGCTTGGTGCAGATCGGGAC", "TGAGCCAAAGATGACTTGCCG", "CAGCCAAGGATGACTTGCCGA", "GCAGCCAAGGATGACTTGCCG", "GGCAAGTCATCCTTGGCTGCA", "GGCAAGTTGTCCTTCGGCTACA", "TCTGGCAAGTTGTCCTTCGGCT", "TAGCCGAAGGACAACTTGCCAG", "CAGCCAAGGATGACTTGCCGG", "CAGCCAAGGATGACTTGCCGG", "CAGCCAAGGATGACTTGCCGG", "CAGCCAAGGATGACTTGCCGG", "CAGCCAAGGATGACTTGCCGG", "CAGCCAAGGATGACTTGCCGG", "TAGCCAAGGATGACTTGCCTG", "TAGCCAAGGATGACTTGCCTG", "GGCAAGTCATCCTTGGCTACC", "GGCAAGTCATCCTTGGCTACC", "TAGCCAAGGATGACTTGCCCA", "GAGCCAAGGATGACTTGCCGT", "CAGCCAAGGATGACTTGCCGA", "TAGCGAAGGATGACTTGCCTA", "AGCCAAGGATGACTTGCCGA", "GAGCCAAGGATGACTTGCCGG", "TAGCCAAGGATGACTTGCCGG", "TAGCCAAGGATGACTTGCCGG", "TAGCCAAGGATGACTTGCCTA", "CAGCCAAGGATGACTTGCCGA", "CAGCCAAGGATGACTTGCCGA", "TAGCCAAGGATGACTTGCCGG", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATATC", "GGATTGAGCCGCGCCAATATC", "TGATTGAGCCGTGCCAATATC", "AGAATCTTGATGATGCTGCAT", "AGAATCTTGATGATGCTGCAT", "CAGCACCATCAAGATTCACA", "GGAATCTTGATGATGCTGCAT", "GGAATCTTGATGATGCTGCAT", "GCAGCACCATTAAGATTCACA", "TGAATCTTAATGGTGCTGCAC", "CAGCACCATTAAGATTCACA", "AGAATCCTGATGATGCTGCAT", "GCAGCACCATTAAGATTCAC", "AGCTCTGATACCATGTTAGATTAG", "CATCAATGAAAGGTATGATTCC", "TAATCCGCATCCTGAGGTCTA", "GACCTCAGGATGCGGATTACC", "GACCTCAGGATGCGGATTACC", "AACCTCAGGATGCAGATTACC", "TAATCTGCATCCTGAGGTTTA", "TTGGACTGAAGGGAGCTCCCT", "TTGGACTGAAGGGAGCTCCCT", "TTGGACTGAAGGGAGCTCCCT", "AAGCTCAGGAGGGATAGCGCC", "AAGCTCAGGAGGGATAGCGCC", "AAGCTCAGGAGGGATAGCGCC", "AAGCTCAGGAGGGATAGCGCC", "AAGCTCAGGAGGGATAGCGCC", "CGCTATCCATCCTGAGTTTC", "CGCTATCCATCCTGAGTTTCA", "CGCTATCCATCCTGAGTTCCA", "TTCGCAGGAGAGATAGCGCCA", "ATCATGCGATCTCTTTGGATT", "TCCAAAGGGATCGCATTGATC", "TCCAAAGGGATCGCATTGATC", "TCCAAAGGGATCGCATTGATC", "TCCAAAGGGATCGCATTGATC", "TCCAAAGGGATCGCATTGATC", "TCCAAAGGGATCGCATTGATC", "TTGGCATTCTGTCCACCTCC", "CTGAAGTGTTTGGGGGAACTC", "CTGAAGTGTTTGGGGGAACTC", "TTCCACAGCTTTCTTGAACTG", "TTCCACAGCTTTCTTGAACTG", "TTCCACAGCTTTCTTGAACTG", "TTCCACAGCTTTCTTGAACTG", "TTCCACAGCTTTCTTGAACTG", "TTCCACAGCTTTCTTGAACTG", "TTCCACAGCTTTCTTGAACTG", "TTCCACAGCTTTCTTGAACTGT", "TTCCACAGCTTTCTTGAACTG", "TTCCACAGCTTTCTTGAACTG", "TTCCACAGCTTTCTTGAACTG", "TTCCACAGCTTTCTTGAACTT", "TTCCACAGCTTTCTTGAACTT", "TCATTGAGTGCAGCGTTGATGT", "TTATTGAGTGCAGCGTTGATG", "TGTGTTCTCATGTCGACCCTG", "TGTGTTCTCAGGTCACCCCTT", "GGAGTGTCATGAGAACACGGA", "TGCCAAAGGAGATTTGCCCGG", "TGCCAAAGGAGATTTGCCCGG", "TGCCAAAGGAGAGTTGCCCTT", "TGCCAAAGGAGAGTTGCCCTG", "TGCCAAAGGAGAGTTGCCCTG", "TGCCAAAGGAGAGTTGCCCTG", "TGCCAAAGGAGAGTTGCCCTG", "GGGCAAGATCTCTATTGGCAGA", "TGCCAATAGAGATCTTGCCCTG", "TTAGATTCACGCACAAACTCG", "ATGCACTGCCTCTTCCCTGGC", "ATGCACTGCCTCTTCCCTGGC", "TCATCTTCATCTTCATCTTCA", "CAACTTAAAACTAGTTGGCAGT", "TAAGAAGAAGAAGCAGATAA", "TAAGAAGAAGAAGAAGAAGA", "TAAGAAGAAGAAGAAGAAGA", "ATGTAACAAATGTTGTATTTCT", "TAGACCATTTGTGAGAAGGGA", "TTTGTTGATTGACATCTATAC", "TTTGCTTCTTAGTCTTGCACA", "TCTTCTTCTTCTTCTTGTTCACA", "CCGCTCTGATACCAATTGTTG", "TGACGTGGCGCTGAGGTGTCTAA", "ATGCTATCCCTTTGGATTCCTCC", "CTTACATTGTGAAACGGAGGGAGTAG", "GATCATGCGATCTCTTTGGAT", "TGAACCGCTGCCTCCAGCGA", "GTTCAAACCGAACCGAACCG", "GATCGATGAACCGCTGCCTC", "AACCGCTGCCTCCAGTGTCT", "GATTGAGCCGCGCCAATATCACTT", "CGGCAAGTCATCCTTGGCTGC", "ATGCTATCCCTTTGGATTCCTCC", "AACCGCTGCCTCCAGTGTCT", "ATCGATGAACCGCTGCCTCC", "GATTGAGCCGCGCCAATATCACTT", "AACCGCTGCCTCCAGTGTCT", "ATCGATGAACCGCTGCCTCC", "GGCAAGTCATCCTTGGCTGA", "ATGACTTACATTGTGAAACGGAGGAA", "TTACATTGTGAAACGGAGGGAGT", "AAGGATGACTTGCCGGAACG", "CTTACATTGTGAAACGGAGGAA", "ACTTACATTGTGAAACGGAGGG", "TGCTCACGGCTCTTTCTGTCAG", "TAGGATTTATGATTTAGGGTTTA", "TAAACCCTAAATCCTAAATCCTA", "ATAGATTTAGAATGGTAGTGATA", "TCACTACCCTTCTAACTCTATCT", "TTAGTTTATCTCTAGTGTCGGT", "AGAGATGTCTGGCTTGCAACA", "TTGCAAGCCAGACATTTCCTT", "AGAAAATGGAGTAGGGTTGAA", "TGACGGTTTTTGGCATATCTCTA", "TTTGGTTGCCGTAGGTACCGG", "ACATTGGACTACATATATTAC", "AGAACCCCGGCTAAGAGACTG", "TTTTGCGTTTCAACTCGGTCC", "TGGGGTTGGAGATGATTTTACTA", "AATTAAAACAGACGACTTACATA", "TCGTTACGGATCGGTCGCTAC", "TAAGATTTGGGTGTAGGGTATA", "TAATGGGGGTTCTTAGGACGAG", "TGGCATTGGTAGTAATGAGTGTT", "GACTTACATGTAAGTCGTCGGG", "TCGCTACGTAGCGACCGACTCG", "GTTTCATCTTAGAGAATGTTGTC", "TTTTGTTCATGACTGCATTTTC", "TACTTAATTATAAGTCGTCTGG", "TACTGGACGACTTACACGGAAG"]

bol_mirbase = ["GTTTCATCTTAGAGAATGTTGTC", "TTTTGTTCATGACTGCATTTTC", "AGAATCTTGATGATGCTGCAT", "TAGACCATTTGTGAGAAGGGA", "TACTGGACGACTTACACGGAAG", "TACTTAATTATAAGTCGTCTGG", "GGAGTGTCATGAGAACACGGA", "TTGAGCCGTGCCAATATCACG", "AGAATCTTGATGATGCTGCAT", "TGTGTTCTCAGGTCACCCCTT", "TTGACAGAAGATAGAGAGCAC"]

ours = ["TTGGACTGAAGGGAGCTCCCT", "TACAAAGCTGAAGCTAACTATG", "TTTCATCTTAGAGAATGTTGTC", "TGATTGAGCCGCGCCAATATC", "TGAAGCTGCCAGCATGATCTA", "TTGACAGAAGATAGAGAGCAC", "TGACAGAAGAGAGTGAGCAC", "GACCTCAGGATGCGGATTACC", "GACCTCAGGATGCGGATTACC", "GACCTCAGGATGCGGATTAC", "TGCTCACGGCTCTTTCTGTCAGT", "TGCCTGGCTCCCTGTATGCC", "CCCGCCTTGCATCAACTGAAT", "TTGACAGAAGAAAGAGAGCAC", "TTGACAGAAGATAGAGAGCAC", "TCGATAAACCTCTGCATCCAG", "TGGAGAAGCAGGGCACGTGCA", "GTTCCTCTGAGCACTTCATTG", "TCATTGAGTGCAGCGTTGATGT", "TGACAGAAGAGAGTGAGCAC", "GGAGTGTCATGAGAACACGGA", "TGGAGAAGCAGGGCACGTGC", "CAGCCAAGGATGACTTGCCG", "TGCCAAAGGAGAGTTGCCCTG", "GGAATCTTGATGATGCTGCAT", "AAGCTCAGGAGGGATAGCGCC", "AGAATCTTGATGATGCTGCAT", "GGGCGAATACTCTTATGGCAGA", "AAGCTCAGGAGGGATAGCGCC", "TGCCTGGCTCCCTGTATGCCA", "TTGCAAGCCAGACATTTCCTTT", "TGACAGAAGAGAGTGAGCAC", "TGAAGCTGCCAGCATGATCTA", "ATCCTCGGGATACAGATTACC", "GGGTCGACATGAGAACACATG", "TCGGACCAGGCTTCATCCCCC", "TCGGACCAGGCTTCATCCCC", "TGCCAAAGGAGAGTTGCCCTG", "TTCGCAGGAGAGATAGCGCCA", "GGAATCTTGATGATGCTGCAT", "TGACAGAAGAGAGTGAGCAC", "TGACAGAAGAGAGTGAGCAC", "TGACAGAAGAGAGTGAGCAC", "TGAGCCAAAGATGACTTGCC", "TGAGCCAAAGATGACTTGCCG", "TGAGCCAAAGATGACTTGTCG", "AGAATCTTGATGATGCTGCAT", "TTTGCCAAAGGAGAGTTGCCC", "TGGAGAAGCAGGGCACGTGCA", "TGTGAATGATGCGGGAGATGT", "TGAAGCTGCCAGCATGATCTA", "ATCATGCGATCTCATTGGATT", "AGAATCTTGATGATGCTGCAG", "TTGGACTGAAGGGAGCTCCCT", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCC", "TGACAGAAGAGAGTGAGCAC", "TTAGATTCACGCACAAACTCG", "TGCCAAAGGAGATTTGCCCGG", "TGTTCTGTGGGTTTTTACCGA", "AAGCTCAGGAGGGATAGCGCC", "TGCCTGGCTCCCTGTATGCCA", "TCCAAAGGGATCGCATTGATCC", "TTGGACTGAAGGGAGCTCCTT", "TTTGGACTGAAGGGAGCTCCT", "GCGTATGAGGAGCCATGCATA", "TCGGACCAGGCTTCATTCCCC", "ACAGGGAACAAGCAGAGCATG", "AAGCTCAGGAGGGATAGCGCC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCCC", "GACTTATAATGATCTCATGAT", "ATAAATCCCAAGCATCATCCA", "TGCCAAAGGAGATTTGCCCCG", "TGCCAAAGGAGATTTGCCCGG", "TCAATGCACTGAAAGTGACTA", "TATGAGAGTATTATAAGTCAC", "TGAATGTCTTTCTCTTCATC", "TGAAGCTGCCAGCATGATCTA", "TCGGACCAGGCTTCATCCCCC", "TCGGACCAGGCTTCATCCCC", "CAGCCAAGGATGACTTGCCG", "TCCCAAATGTAGACAAAGCA", "AGATATTAGTGCGGTTCAATC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCC", "TCCACCCATACCATACAGACCC", "ATCATGCGATCTCTTCGGATT", "TTTGGATTGAAGGGAGCTCTA", "CTGAAGTGTTTGGGGGAACTC", "CTGAAGTGTTTGGGGGAACT", "CTGAAGTGTTTGGGGGGACTC", "CTGAAGTGTTTGGGGGGACT", "CTGAAGTGTTTGGGGGGACTC", "CTGAAGTGTTTGGGGGGACT", "TTTGGATTGAAGGGAGCTCTA", "GCAAGTCGACTTTGGCTCTGT", "GCAAGTTGACTTTGGCTCTGT", "TGAGCCAAAGATGACTTGCCG", "TTGGCATTCTGTCCACCTCC", "TCGGACCAGGCTTCATTCCCC", "TCGCTTGGTGCAGGTCGGGAA", "TGCCTGGCTCCCTGTATGCCA", "TGGAGAAGCAGGGCACGTGCG", "TGACAGAAGAGAGTGAGCAC", "TCAATACATTGGACTACATAT", "TCAATACATTGGACTACATA", "CAGCCAAGGATGACTTGCCG", "TCGATAAACCTCTGCATCCAG", "TGATTGAGCCGCGCCAATATC", "TGATTGAGCCGCGCCAATAT", "TGCCTGGCTCCCTGTATGCC", "TCGCTTGGTGCAGGTCGGGAC", "TTGGACTGAAGGGAGCTCCCT", "TGACAGAAGAGAGGGAGCAC", "TGACAGAAGAGAGTGAGCAC", "TTGAGCCGTGCCAATATCACG", "CTGAAGTGTTTGGGGGGACTC", "CTGAAGTGTTTGGGGGGACT", "CTGAAGTGTTTGGGGGAACTC", "CTGAAGTGTTTGGGGGAACT", "ACAGGGAACAAGCAGAGCATG", "TGATTGAGCCGCGTCAATATC", "AGAATCTTGATGATGCTGCAG", "TTTCCAAATGTAGACAAAGCA", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCC", "TGACAGAAGAGAGTGAGCAC", "TCGGACCAGGCTTCATCCCCC", "TCGGACCAGGCTTCATCCCC", "TTCCACAGCTTTCTTGAACTT", "TGCCAAAGGAGAGTTGCCCTG", "TGCCAAAGGAGAGTTGCCCT", "TCGCTTGGTGCAGGTCGGGAA", "TGCCTGGCTCCCTGTATGCC", "TTGGACTGAAGGGAACTCCCT", "TGGAGAAGCAGGGCACGTGCG", "AAGCTCAGGAGGGATAGCGCC", "GGAATCTTGATGATGCTGCAT", "TTCGCAGGAGAGATAGCGCCA", "TCATTGAGTGCAGCGTTGATGT", "TCATTGAGTGCAGCGTTGATGT", "TGCCAAAGGAGAGTTGCCCTG", "GGGTCGATATGAGAACACATG", "TGACAGAAGAGAGTGAGCAC", "TTGACAGAAGAGAGCGAGCAC", "TCGGACCAGGCTTCATTCCCC", "TCGGACCAGGCTTCATTCCC", "TCGATAAACCTCTGCATCCAG", "TCGATAAACCTCTGCATCCA", "TCGGACCAGGCTTCATCCCCC", "AGAATCTTGATGATGCTGCAT", "ATCCTCGGGACACAGATTACC", "TATGGGTGGGGTGGCAAAATC", "AGATATTGGTGCGGTTCAATC", "TTTTGCGTTTCAACTCGGTCC", "TTGACAGAAGATAGAGAGCA", "TTAGATGACCATCAACAAATA", "TTAGATGACCATCAACAAAT", "TCAGGCAGACTGCTTCATCTCA", "TAATGGTGATTTTGAATCTAA", "TGGCATTGGTAGTAATGAGTGT", "ATTAATAATTATACTGAGGAA", "TGGCATTGGTAGTAATGAGTGT", "TGGCATTGGTAGTAATGAGTGT", "TGGCATTGGTAGTAATGAGTGT", "TGGCATTGGTAGTAATGAGTGT", "GATAACTTGGTTTTGCTCCT", "AGAGCTTCCTTGAGTCCATTC", "TAGTCAGCTCCAGCTATGTACA", "CAACATTTTCAAGATGGAAAA", "TATTGGCCTGGTTCATTCAGA", "GATCATGTTCGCAGTTTCACC", "GCTCTCTATACTTCTGTCAATA", "GCTCACTGCTCTTTCTGTCAGG", "TAATCTGCATCCTGGGGTTTA", "TAATCTGCATCCTGGGGTTTA", "AATCTGCATCCTGGGGTTTA", "TGACAGAAGAGAGTGAGCACA", "CGTACAGAGTAGTCAAGCATG", "TCGCTTGGTGCAGGTCGGGAC", "GCTCTCTTTACTTCTGCCACCA", "GCTCTCTAGCCTTCTGTCATCA", "GGAGGCAGCGGTTCATCGATC", "CATGTGCCCATCTTCCCCATC", "CTGAAGTGTTTGGGGGAACTC", "ATCAATGTTGGCTCAATTATG", "GCTTACTCTCTCTCTGTCACC", "TGTGTTCTCAGGTCACCCCTT", "ACGTGTTCTACTACTCCAAC", "GCAAGTTGTCCTTCGGCTACA", "GGGCATCTTTCTATTGGCACG", "GCAGCATCATTAAGATTCACA", "CGCCATCCATCCTGAGTTCCA", "GCAGCACCATCAAGATTCACA", "TGCCAAAGGAGATTTGCCCCG", "CGCTGTCCATCCTGAGTTTCA", "GCGTATGAGGAGCCAAGCATA", "AGAGATGTCTGGCTTGCAACA", "GCTTACTCTCTCTCTGTCACC", "GATCATGTTCGTAGTTTCACC", "TAATCTGCATCCTGAGGTTTA", "TGTGTTCTCAGGTCACCCCTG", "GGAATGTTGTCTGGCTCGAGG", "GAATGTTGTCTGGCTCGAGG", "GGGCATCTTTCTATTGGCACG", "ACGGTATTTCTCCTACGTAGC", "GCAGCATCATTAAGATTCACA", "GCTCACTGCTCTATCTGTCAGA", "GCTCACCTCTCTTTCTGTCAGT", "GCTCACCTCTCTTTCTGTCAGT", "CAAGTAGACTTTGGCTCTGT", "GCAAGTCGACTTTGGCTCTGT", "GCAAGTTGACTTTGGCTCCGT", "GCAGCACCATCAAGATTCACA", "GAAATTCAACTTTGGCAAAGA", "CACGTGCTCCCCTCCTCCAAC", "ATCTGCCGACTCATTCATCCA", "GGTCATGTCTGACAGCTTCACT", "TCCAAAGGGATCGCATTGATCC", "GCATCATCTTCAAGATTCAGA", "GGAGCTTTCTTCGGTCCACTC", "GGATTGTTGTCTGGCACGAGG", "GATTGTTGTCTGGCACGAGG", "GCTCACTGCTCTTTCTGTCAGA", "TGTTTTGTGCGTGAATCTAATT", "GGGCAAGATCTCCTTTGGCAGG", "GGTAAAAGCCTTCAGAATATG", "CGCTGTCCATCCTGAGTTTCA", "GCATATGAGGAGCCAAGCATA", "ATCATGCTATCCCTTTCGATT", "GGAGATTCTTTCAGTCCAGTC", "GAGATTCTTTCAGTCCAGTCA", "TGCCTGGCTCCCTGTATGCCA", "GGAATGTTGTTTGGCTCGAAG", "TGCACTGCCTCTTCCCTGGCT", "CGCTGTCCATCCTGAGTTTCA", "GGAATGTTGTCTGGCTCGAGG", "GGAATGTTGTCTGGCTCGAGG", "TATGAGAGTATTATAAGTCAC", "GAAGATTCTTGGGATTTATCT", "GGGCAAATACTCCATTGGCAGA", "GGGCAAGATCTCTATTGGCAGA", "GTCACTTTCAATGCGTTGATC", "GACTTATAATAATCTCATGAA", "TGGAGAGTAAATGACATTCAGA", "GATCATGTTCGCAGTTTCACC", "GGAATGTTGTCTGGATCGAGG", "GAATGTTGTCTGGATCGAGG", "GCAAGTCGTCCTTGGCTATA", "CTTTGTCTATATTCTTGGAAA", "TTGAGCCGTGCCAATATCACG", "GGAATGTTGTCTGGCACGAGG", "GAATGTTGTCTGGCACGAGG", "GTCTGTATGTATGGGCTGAGT", "TCCAAAGGGATCGCATTGATCC", "GGGCTCCTTATAGTTCAAACG", "GTTCCTCTGAGCACTTCATTG", "TTCCTCTGAGCACTTCATTG", "GTTCCCTGAAACGCTTCATTG", "TTCCCTGAAACGCTTCATTG", "GTTCCCTTTAACGCTTCATTG", "TTCCCTTTAACGCTTCATTG", "GAGCTCCTTTAAGTTCAAACG", "TGAGCCAAAGATGACTTGCCG", "TGAGCCAAAGATGACGTGCCG", "GCAAGTTGACTTTGGCTCTGT", "AGGTGGTCATACTGTCAACA", "TGGATGATGCTTGGCTCGAGA", "CCCGCCCTGTATCAAGTGAAT", "GCGTACAAGGAGTCAAGCATG", "CACGTGTTCTACTACTCCAAC", "GCTCACTCTCTATCCGTCACC", "ATGTAGTCCAATCTATTGAAG", "TGTAGTCCAATCTATTGAAG", "GCAAGTTGTCCTTCGGCTACA", "GGAGGCAGCGGTTCATCGATC", "TATTGGCCTGGTTCACTCAGA", "ATTGGCCTGGTTCACTCAGA", "CGTACAGAGTAGTCAAGCATG", "CCCGCCTTGCATCAATTGAAT", "GGAGCTTCCTTTAGTCCATTC", "GCTCACCTCTCTTTCTGTCAGT", "GCTCACTGCTCTATCTGTCAGA", "AGATATTAGTGCGGTTCAATC", "GTTCCCTTTAACGCTTCATTG", "TTCCCTTTAACGCTTCATTG", "GTTCCTCTGAGCACTTCATTG", "TTCCTCTGAGCACTTCATTG", "TGCACTGCCTCTTCCCTGGCT", "TATTGGCCTGGTTCACTCAGA", "GCATCATCATCAAGATTCAGA", "CTTTGCCTATCGTTTGGAAAAG", "GGACTGTTGTCTGGCTCGAGG", "GACTGTTGTCTGGCTCGAGG", "GCTCACTGCTCTTTCTGTCAGA", "GGAATGTTGTCTGGACCGAGG", "GAATGTTGTCTGGACCGAGG", "GCTCAAGAAAGCTGTGGGAAA", "GGGCTTCTCTCTATTGGCAGG", "GGCTTCTCTCTATTGGCAGG", "CCTGCCTTCCATCAACTGAAT", "CGTACGAGGAGCCAAGCATG", "AGAGTTTCCTTAAGTCCATTC", "CACGTGTTCTACTACTCCAAC", "CGCTATCCATCCTGAGTTCCA", "GCAGCATCATTAAGATTCACA", "ACGGTATCTCTCCTACGTAGC", "ATCAACGTTGGCTCAATTATG", "ATCAATGTTGGCTCAATTATG", "GGGCATCTTTCTATTGGCACG", "TGTGTTCTCAGGTCACCCCTG", "GCTTACTCTCTCTCTGTCACC", "GCTCATTCTCCTTCTGTCATAACT", "GGACTGTTGTCTGGCTCGAGG", "GACTGTTGTCTGGCTCGAGG", "GGAGGCAGCGGTTGATCGATC", "GAGGCAGCGGTTGATCGATC", "GGAATGTTGTTTGGATCGAGG", "GCAGCACCATTAAGATTCACA", "TAATCTGCATCCTGAGGTTTA", "TTTTGCCTACTCCTCCCATACC", "TTGAGCCGTGCCAATATCACG", "GCTGAATTGGAACGCAAAATC", "CTCTCTAGTCTTCTGTCATCA", "TTTGTTGATTGACATCTATGC", "TTGTTGATTGACATCTATGC", "AGATGAAGCCTCCGACTGAGA", "AGGTTGAGAATCACCATTGGG", "ACTCATTACCATCAAAGCCACG", "CATCGGTATAATTATTAATTA", "ACTCATTACCATCAAAGCCACG", "ACTCATTACCATCAAAGCCACG", "ACTCATTACCATCAAAGCCACG", "ACTCATTACCATCAAAGCCACG", "GAGCAGAACCAAGTTAGTCT"]

zhang_2018 = set(zhang_2018)
wang_2012 = set(wang_2012)
lukasik_2013 = set(lukasik_2013)
bol_mirbase = set(bol_mirbase)
ours = set(ours)

together = len(zhang_2018 & wang_2012 & lukasik_2013)

zw = len(zhang_2018 & wang_2012) - together
zl = len(zhang_2018 & lukasik_2013) - together
wl = len(wang_2012 & lukasik_2013) - together

z = len(zhang_2018) - zw - zl - together
w = len(wang_2012) - zw - wl - together
l = len(lukasik_2013) - zl - wl - together

mirbase_together = len((zhang_2018 | wang_2012 | lukasik_2013) & bol_mirbase)

print(together)
print(zw, zl, wl)
print(z, w, l)
print(mirbase_together)


#together_4 = len(zhang_2018 & wang_2012 & lukasik_2013 & ours)
#
#zwl_4 = len(zhang_2018 & wang_2012 & lukasik_2013) - together_4
#zwo_4 = len(zhang_2018 & wang_2012 & ours) - together_4
#zlo_4 = len(zhang_2018 & ours & lukasik_2013) - together_4
#wlo_4 = len(ours & wang_2012 & lukasik_2013) - together_4

#%%
import venn

plt.figure(figsize = (7, 7))

labels = venn.get_labels([ours, zhang_2018, wang_2012, lukasik_2013])
fig, ax = venn.venn4(labels, names = ['Present Study', 'Zhang et al. 2018', 'Wang et al. 2012', 
                                      'Lukasik et al. 2013'])
fig.savefig('previous_bol_mirnas_venn_wours.svg', 
             bbox_inches = 'tight', format = 'svg')
fig.show()

#%%

# Use eulerAPE instead for proportional #

from matplotlib_venn import venn3
from matplotlib import pyplot as plt

plt.figure(figsize = (7, 7))
venn3(subsets = (z, w, zw, l, zl, wl, together), 
      set_labels = ('Zhang et al. 2018', 
                    'Wang et al. 2012', 
                    'Lukasik et al. 2013')
      )

#      Set1                      Set2
# +-------------+-----------+-------------+
# |             |           |             |
# |             |           |             |
# |     1z      |     3zw   |      2w     |
# |             |           |             |
# |       +-----------------------+       |
# |       |     |           |     |       |
# |       | 5zl |     7t    | 6wl |       |
# |       |     |           |     |       |
# +-------------+-----------+-------------+
#         |                       |
#         |                       |
#         |           4l          |
#         |                       |
#         |                       |
#         +-----------------------+
#                   Set3



plt.savefig('previous_bol_mirnas_venn.svg', 
            bbox_inches = 'tight', format = 'svg')
plt.show()

